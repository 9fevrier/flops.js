{"version":3,"sources":["index.js"],"names":["FlopsBase","$flops","PromiseStream$$1","_stream","Promise","resolve","_store","Store","_currentId","fn","then","values","createOperation","$name","catch","Flops","next","done","error","store","MethodWrapper","target","proxy","name","receiver","_target","_proxy","_name","_receiver","__proto__","args","t","originalMethod","bind","Object","defineProperty","value","toString","nextMethod","apply","Reflect","get","errorMethod","console","log","receveiver","Flopsify$$1","clz","_reserved","_clz","_instance","_handler","handler","_i","Proxy","self","methodWrapper","methodDispatcher","indexOf","compose","simple","flopsify$$1","proxify","Operation","id","funcName","results","_id","_functionName","_uid","v4","_results","_operations","operation","push","Array","operations","length","forEach","op","add","Flopsify","flopsify","PromiseStream"],"mappings":"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","file":"flops-alpha.dist.js","sourcesContent":["import 'source-map-support/register';\nimport uuid from 'uuid';\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass FlopsBase {\n\n  constructor() {\n    this.$flops = true;\n  }\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass PromiseStream$$1 extends FlopsBase {\n\n  constructor() {\n    super();\n    this._stream = Promise.resolve();\n    this._store = new Store();\n    this._currentId = 0;\n  }\n\n  get store() {\n    return this._store\n  }\n\n  next(fn) {\n    if (fn) {\n      this._stream = this._stream\n        .then(fn)\n        .then((values) => {\n          this._store.createOperation(fn.$name, values);\n          return this\n        });\n    } else {\n      this._stream = this._stream.then(() => {\n        return Promise.resolve(this)\n      });\n    }\n    return this\n  }\n\n  done(fn) {\n    this._stream = this._stream.then(() => {\n      return this\n    }).then(fn);\n    return this\n  }\n\n  error(fn) {\n    this._stream = this._stream.catch(fn);\n    return this\n  }\n\n\n  /*\n   next(fn) {\n   return this.add(fn).add((values) => {\n   this._store.createOperation(values)\n   return this\n   })\n   }\n   */\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Flops extends FlopsBase {\n\n  constructor() {\n    super();\n    this._stream = new PromiseStream$$1();\n  }\n\n\n  get store() {\n    return this._stream.store\n  }\n\n\n  next(fn) {\n    this._stream = this._stream.next(fn);\n    return this\n  }\n\n  done(fn) {\n    this._stream = this._stream.done(fn);\n    return this\n  }\n\n  error(fn) {\n    this._stream = this._stream.error(fn);\n    return this\n  }\n\n\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass MethodWrapper extends FlopsBase {\n\n  constructor(target, proxy, name, receiver) {\n    super();\n    this._target = target;\n    this._proxy = proxy;\n    this._name = name;\n    this._receiver = receiver;\n  }\n\n  get target() {\n    return this._target\n  }\n\n  get proxy() {\n    return this._proxy\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get receveiver() {\n    return this.receveiver\n  }\n\n  get errorMethod() {\n    return this.target.error\n  }\n\n  get nextMethod() {\n    return this.target.next\n  }\n\n  get originalMethod() {\n    return this._target[this._name]\n  }\n\n  simple() {\n    if ((this.name !== 'valueOf') && (this._name in this.target.__proto__)) {\n      return (...args) => {\n        let t = this.originalMethod.bind(this.target, args);\n        Object.defineProperty(t, '$name', {\n          value: this._name.toString()\n        });\n        this.nextMethod.apply(this.target, [t]);\n        return this.proxy\n      }\n    } else {\n      return Reflect.get(this.target, this._name, this.receiver)\n    }\n  }\n\n  next() {\n    return (...args) => {\n      Object.defineProperty(args[0], '$name', {\n        value: this._name.toString()\n      });\n      this.nextMethod.apply(this.target, args);\n      return this.proxy\n    }\n  }\n\n  error() {\n    return (...args) => {\n      this.errorMethod.apply(this.target, args);\n      return this.proxy\n    }\n  }\n\n  compose() {\n    return (...args) => {\n      console.log('this.proxy' + this.proxy);\n      let t = this.originalMethod.bind(this.proxy, args);\n      Object.defineProperty(t, '$name', {\n        value: this._name.toString()\n      });\n      this.nextMethod.apply(this.target, [t]);\n      return this.proxy\n    }\n  }\n\n}\n\nclass Flopsify$$1 {\n\n  constructor(clz) {\n\n    this._reserved = ['next', 'done', 'error'];\n    this._clz = clz;\n    this._instance = new this._clz();\n    this._handler = this.handler();\n    this._target = null;\n    this._i = 0;\n  }\n\n  proxify() {\n    this._proxy = new Proxy(this._instance, this._handler);\n    return this._proxy\n  }\n\n  handler() {\n    const self = this;\n    return {\n      get: (target, name, receiver) => {\n        const methodWrapper = new MethodWrapper(target, this._proxy, name, receiver);\n        if (!this._target) {\n          this._target = target;\n        }\n        return this.methodDispatcher(methodWrapper)\n      }\n    }\n  }\n\n  methodDispatcher(methodWrapper) {\n    let fn;\n    if (methodWrapper.name.toString().indexOf('$') === 0) {\n      fn = methodWrapper.compose();\n    } else {\n      switch (methodWrapper.name.toString()) {\n        case 'next':\n          fn = methodWrapper.next();\n          break\n        case 'error':\n          fn = methodWrapper.error();\n          break\n        case 'store':\n          fn = Reflect.get(methodWrapper.target, methodWrapper.name, methodWrapper.receiver);\n          break\n        default:\n          fn = methodWrapper.simple();\n          break\n      }\n    }\n    return fn\n  }\n\n}\n\nfunction flopsify$$1(clz) {\n  return new Flopsify$$1(clz).proxify()\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Operation extends FlopsBase {\n\n  constructor(id, funcName, results) {\n    super();\n    this._id = id;\n    this._functionName = funcName;\n    this._uid = uuid.v4();\n    this._results = results;\n  }\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Store extends FlopsBase {\n  constructor() {\n    super();\n    this._currentId = 0;\n    this._operations = [];\n  }\n\n  add(operation) {\n    this._operations.push(operation);\n    return this\n  }\n\n  createOperation(funcName, values) {\n    let operation;\n    console.log('typeof=' + typeof(values));\n     if (values instanceof Array) {\n     const operations = values;\n       console.log(operations.length);\n     operations.forEach((op) => {\n       console.log('>>>' + op._results);\n     });\n     console.log('>>>> ' + operations._operations.length);\n     } else {\n\n    operation = new Operation(++this._currentId, funcName, values);\n    this.add(operation);\n    }\n\n    return this\n  }\n\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nexport { Flops, Flopsify$$1 as Flopsify, flopsify$$1 as flopsify, FlopsBase, Operation, PromiseStream$$1 as PromiseStream, Store };\n"],"sourceRoot":"/home/fmichaud/.node_modules/flops-alpha/.gulp/tasks/src"}