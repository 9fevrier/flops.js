{"version":3,"sources":["index.js"],"names":["FlopsBase","$flops","PromiseStream$$1","_stream","Promise","resolve","_store","Store","_currentId","fn","then","values","createOperation","$name","catch","Flops","next","done","error","store","Flopsify$$1","clz","_reserved","_clz","_instance","_handler","handler","_target","_i","_proxy","Proxy","self","get","target","name","receiver","originalMethod","console","log","__proto__","toString","args","Object","defineProperty","value","apply","Reflect","t","bind","flopsify$$1","proxify","Operation","id","funcName","results","_id","_functionName","_uid","v4","_results","_operations","operation","push","add","JSON","stringify","Flopsify","flopsify","PromiseStream"],"mappings":"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","file":"flops-alpha.dist.js","sourcesContent":["import 'source-map-support/register';\nimport uuid from 'uuid';\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass FlopsBase {\n\n  constructor() {\n    this.$flops = true;\n  }\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass PromiseStream$$1 extends FlopsBase {\n\n  constructor() {\n    super();\n    this._stream = Promise.resolve();\n    this._store = new Store();\n    this._currentId = 0;\n  }\n\n  get store() {\n    return this._store\n  }\n\n  next(fn) {\n    if (fn) {\n      this._stream = this._stream\n        .then(fn)\n        .then((values) => {\n          this._store.createOperation(fn.$name, values);\n          return this\n        });\n    } else {\n      this._stream = this._stream.then(() => {\n        return Promise.resolve(this)\n      });\n    }\n    return this\n  }\n\n  done(fn) {\n    this._stream = this._stream.then(() => {\n      return this\n    }).then(fn);\n    return this\n  }\n\n  error(fn) {\n    this._stream = this._stream.catch(fn);\n    return this\n  }\n\n\n  /*\n   next(fn) {\n   return this.add(fn).add((values) => {\n   this._store.createOperation(values)\n   return this\n   })\n   }\n   */\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Flops extends FlopsBase {\n\n  constructor() {\n    super();\n    this._stream = new PromiseStream$$1();\n  }\n\n\n  get store() {\n    return this._stream.store\n  }\n\n\n  next(fn) {\n    this._stream = this._stream.next(fn);\n    return this\n  }\n\n  done(fn) {\n    this._stream = this._stream.done(fn);\n    return this\n  }\n\n  error(fn) {\n    this._stream = this._stream.error(fn);\n    return this\n  }\n\n\n\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Flopsify$$1 {\n\n  constructor(clz) {\n\n    this._reserved = ['next', 'done', 'error'];\n    this._clz = clz;\n    this._instance = new this._clz();\n    this._handler = this.handler();\n    this._target = null;\n    this._i = 0;\n  }\n\n  proxify() {\n    this._proxy = new Proxy(this._instance, this._handler);\n    return this._proxy\n  }\n\n  handler() {\n    const self = this;\n    return {\n      get: (target, name, receiver) => {\n        if (!this._target) {\n          this._target = target;\n        }\n        // console.log(target.constructor.name + ' ' + name.toString())\n        const originalMethod = this._target[name];\n        const next = this._target.next;\n        const error = this._target.error;\n\n        console.log(target.__proto__);\n\n        let fn;\n        switch (name.toString()) {\n          case 'next':\n            console.log(`--- NEXT ${name.toString()}`);\n            console.log(next.toString());\n            fn = (...args) => {\n              Object.defineProperty(args[0], '$name', {\n                value: name.toString()\n              });\n              next.apply(this._target, args);\n              return this._proxy\n            };\n            break\n          case 'error':\n            fn = (...args) => {\n              error.apply(this._target, args);\n              return this._proxy\n            };\n            break\n          case 'store':\n            fn = Reflect.get(target, name, receiver);\n            break\n          default:\n            if ((name !== 'valueOf') && (name in this._target.__proto__)) {\n              console.log(`--- FN NORMAL ${name.toString()}`);\n\n\n              fn = (...args) => {\n\n\n\n                let t = originalMethod.bind(null, args);\n                Object.defineProperty(t, '$name', {\n                  value: name.toString()\n                });\n                next.apply(this._target, [t]);\n                return this._proxy\n              };\n\n\n\n\n            } else {\n              console.log(`--- RIEN POUR ${name.toString()}`);\n              fn = Reflect.get(target, name, receiver);\n            }\n            break\n        }\n\n\n        return fn\n\n\n      }\n\n      /*\n       console.log(name + ' ' + (name.toString() in self._reserved))\n       if (name.toString() in self._reserved) {\n       console.log('fonction réservée')\n       return Reflect.get(target, name, receiver)\n       } else {\n       // return Reflect.get(target, name, receiver)\n       console.log('normal method = ' + name.toString())\n       return (...args) => {\n       const targetFn = Reflect.get(target, name, receiver)\n       const x = (...args) => {\n       console.log('targetFn ' + name)\n       target.next(targetFn.bind(target, args))\n       console.log('targetFn2' + JSON.stringify(target))\n       return target\n       }\n\n       return x(args)\n       }\n\n\n       }*/\n\n    }\n\n  }\n\n\n}\n\nfunction flopsify$$1(clz) {\n  return new Flopsify$$1(clz).proxify()\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Operation extends FlopsBase {\n\n  constructor(id, funcName, results) {\n    super();\n    this._id = id;\n    this._functionName = funcName;\n    this._uid = uuid.v4();\n    this._results = results;\n  }\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nclass Store extends FlopsBase {\n  constructor() {\n    super();\n    this._currentId = 0;\n    this._operations = [];\n  }\n\n  add(operation) {\n    this._operations.push(operation);\n    return this\n  }\n\n  createOperation(funcName, values) {\n      const operation = new Operation(++this._currentId, funcName, values);\n      this.add(operation);\n      return this\n  }\n\n  toString() {\n    return `Flops.Store: ` + JSON.stringify(this._operations)\n  }\n}\n\n/**\n * The MIT License (MIT)\n *\n * Copyright (c) 2017, 9 Février\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nexport { Flops, Flopsify$$1 as Flopsify, flopsify$$1 as flopsify, FlopsBase, Operation, PromiseStream$$1 as PromiseStream, Store };\n"],"sourceRoot":"/home/fmichaud/.node_modules/flops-alpha/.gulp/tasks/src"}